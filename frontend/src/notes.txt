Critical:
	- unit test ObservableGraph and ObservableUnit - DH (DONE)
	- finish list space
		- (DONE) UI expand/contract ListView - Ben
		- remove tasks/categories (completely and remove edge) - DH
		- enhance and expand on listspace user interface - Ben
			- shows tags
			- show due date
			- make look better (in general)
	* edit tasks
		- complete EditBar controller and integrate it with list space - TS
	- edit categories - DH
	    - be able to manipulate all the variables in ToDoElement (UI and functionality)

High Priority:
	* select which category is viewed in the workspace
	    - create user interface to select which workspace - Gabby
	    - integrate user interface - TS
	* search for tasks (globally and relative to workspace)
	    - create search user interface - Ben
	    - integrate user interface - Ben
    * TODO archiving
            - Create method of 'archiving' task
            - Cry
            - ???
            - Profit
            - create user interface - Gabby
            - integrate user interface w/ observables- Gabby


Medium Priority:
	* send email notifications
	    - create method which sends an email - DL
	* import/export to Google Calendar
		- user interface - Ben
		- API functionality - DL and Ben
	* TODO setting theme - Gabby
            - each stylesheet property is bound to a stylesheet
            - Light theme
            - Dark theme

Low Priority:
	* settings
	    - create user interface - TS
	    - integrate user interface - TS
	- TODO add in user interface adding/removing/viewing attachments - Gabby


Forget about:
	- multiple users
	- calendar view
	- integration with a database
    - file permissions
    - board space
    - save to disk (serialize and de-serialize)
    - customize user interface workspace background image/color





